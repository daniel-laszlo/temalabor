/*
 * generated by Xtext 2.10.0
 */
package hu.bme.mit.temalabor.ui.quickfix;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.BadLocationException;
import org.eclipse.xtext.ui.codetemplates.templates.Variable;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.util.Strings;
import org.eclipse.xtext.validation.Issue;

import hu.bme.mit.temalabor.myDsl.Domainmodel;
import hu.bme.mit.temalabor.myDsl.Mapdim;
import hu.bme.mit.temalabor.myDsl.impl.DomainmodelImpl;
import hu.bme.mit.temalabor.validation.MyDslValidator;

/**
 * Custom quickfixes.
 *
 * See
 * https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
public class MyDslQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(MyDslValidator.NOT_SQUARE_MATRIX)
	public void makeSquare(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Make mapsize square matrix", // label
				"", // description
				"", // icon
				new ISemanticModification() {
					@Override
					public void apply(EObject element, IModificationContext context) throws Exception {
						Mapdim dim = (Mapdim) element;
						dim.setSizey(dim.getSizex());

					}
				});
	}
	
//	@Fix(MyDslValidator.CLUE_NOT_INSIDE_MATRIX_X_HIGH)
//	public void fixCleeInsideMatrix_XHIGH(final Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, "Make mapsize square matrix", // label
//				"", // description
//				"", // icon
//				new ISemanticModification() {
//					@Override
//					public void apply(EObject element, IModificationContext context) throws Exception {
//						Domainmodel domainmodel = (Domainmodel) element;
//						Issue issue2 = issue;
//						IssueResolutionAcceptor acceptor2 = acceptor;
//						domainmodel.getClues();
//					}
//				});
//	}

}
